plugins {
	id "fabric-loom" version "1.10-SNAPSHOT"
	id "maven-publish"
	id "com.github.johnrengelman.shadow" version "7.0.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
	maven { url "https://jitpack.io" }
}

apply plugin: "com.github.johnrengelman.shadow"

loom {
	accessWidenerPath = file("src/main/resources/minecraftbutthevideoqualityequalsyourhealth.accesswidener")
}

configurations {
	modIncludeImplementation
	include.extendsFrom modIncludeImplementation
	modImplementation.extendsFrom modIncludeImplementation
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modIncludeImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	shadow implementation("io.obs-websocket.community:client:2.0.0")
}

task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

build {
	shadowJar
	build
}

shadowJar {
	archiveClassifier.set("shadow")
	configurations = [project.configurations.shadow]
	remapJar {
		dependsOn shadowJar
		input.set shadowJar.archiveFile.get()
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}
